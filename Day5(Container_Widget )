/*A convenience widget that combines common painting, positioning, and sizing widgets.

Synatax:-Center(
  child: Container(
    margin: const EdgeInsets.all(10.0),
    color: Colors.amber[600],
    width: 48.0,
    height: 48.0,
  ),
)
 
 Properties:-
 
alignment → AlignmentGeometry?
Align the child within the container.
final
child → Widget?
The child contained by the container.
final
clipBehavior → Clip
The clip behavior when Container.decoration is not null.
final
color → Color?
The color to paint behind the child.
final
constraints → BoxConstraints?
Additional constraints to apply to the child.
final
decoration → Decoration?
The decoration to paint behind the child.
final
foregroundDecoration → Decoration?
The decoration to paint in front of the child.
final
hashCode → int
The hash code for this object.
@nonVirtual, read-only, inherited
key → Key?
Controls how one widget replaces another widget in the tree.
final, inherited
margin → EdgeInsetsGeometry?
Empty space to surround the decoration and child.
final
padding → EdgeInsetsGeometry?
Empty space to inscribe inside the decoration. The child, if any, is placed inside this padding.
final
runtimeType → Type
A representation of the runtime type of the object.
read-only, inherited
transform → Matrix4?
The transformation matrix to apply before painting the container.
final
transformAlignment → AlignmentGeometry?
The alignment of the origin, relative to the size of the container, if transform is specified.
final


*/





import 'package:flutter/material.dart';

void main(List<String> args) {
  runApp(App());
}

class App extends StatelessWidget {
  const App({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Sample app'),
        ),
        body: Center(
            child: Container(
          color: const Color.fromARGB(0, 158, 86, 86),
          padding: const EdgeInsets.all(25.0),
          margin: const EdgeInsets.all(50),
          transform: Matrix4.rotationZ(20),
          // height: 200,
          // width: 200,
          child: const Text(
            'Hello World',
            style: TextStyle(fontSize: 25),
          ),
        )),
      ),
    );
  }
}
